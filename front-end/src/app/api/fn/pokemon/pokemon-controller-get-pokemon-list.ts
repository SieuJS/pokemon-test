/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { PokemonListDto } from '../../models/pokemon-list-dto';

export interface PokemonControllerGetPokemonList$Params {

/**
 * Name of the Pokémon
 */
  name?: string;

/**
 * Speed stat
 */
  speed?: number;

/**
 * Is this Pokémon legendary?
 */
  legendary?: boolean;

/**
 * Current page number
 */
  page?: number;

/**
 * Number of items per page
 */
  limit?: number;
}

export function pokemonControllerGetPokemonList(http: HttpClient, rootUrl: string, params?: PokemonControllerGetPokemonList$Params, context?: HttpContext): Observable<StrictHttpResponse<PokemonListDto>> {
  const rb = new RequestBuilder(rootUrl, pokemonControllerGetPokemonList.PATH, 'get');
  if (params) {
    rb.query('name', params.name, {});
    rb.query('speed', params.speed, {});
    rb.query('legendary', params.legendary, {});
    rb.query('page', params.page, {});
    rb.query('limit', params.limit, {});
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<PokemonListDto>;
    })
  );
}

pokemonControllerGetPokemonList.PATH = '/api/pokemon/list';
